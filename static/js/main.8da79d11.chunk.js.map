{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onFilterByYear","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","yearFilter","setYearFilter","filteredExpenses","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","expenseForm","setExpenseForm","action","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","htmlFor","type","min","step","onClick","NewExpense","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8da79d11.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../UI/Card.css\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpenseFilter.css\";\n\nconst ExpensesFilter = (props) => {\n \n\n  const yearFilterHandler = (event) => {\n    props.onFilterByYear(event.target.value)\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={ props.selected} onChange={yearFilterHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from 'react'\n\nimport './ExpenseDate.css'\n\nconst ExpenseDate = (props) =>\n{\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n    const year = props.date.getFullYear();\n  \n    return (\n      <div className=\"expense-date\">\n        <div className=\"expense-date__month\">{month}</div>\n        <div className=\"expense-date__year\">{year}</div>\n        <div className=\"expense-date__day\">{day}</div>\n        </div>\n    )\n}\n\nexport default ExpenseDate;","import React from \"react\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map(({ id, title, amount, date }) => (\n        <ExpenseItem key={id} title={title} amount={amount} date={date} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from 'react'\nimport ChartBar from './ChartBar'\nimport './Chart.css'\n\n\nconst Chart = props =>\n{\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value)\n    const totalMax = Math.max(...dataPointValues)\n    return <div className=\"chart\">\n        {props.dataPoints.map((dataPoint) =>\n       (\n            <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalMax} label={dataPoint.label}/>\n        ))}\n    </div>\n}\n\n\nexport default Chart;","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n  const [yearFilter, setYearFilter] = useState(\"2021\");\n  const filterByYearHandler = (year) => {\n    setYearFilter(year);\n  };\n  const filteredExpenses = props.items.filter(\n    (expense) => expense.date.getFullYear().toString() === yearFilter\n  );\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter\n        selected={yearFilter}\n        onFilterByYear={filterByYearHandler}\n      />\n      <ExpensesChart expenses={filteredExpenses} />\n      <ExpensesList items={filteredExpenses} />\n    </Card>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const [expenseForm, setExpenseForm] = useState(false);\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangedHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  const addExpenseHandler = () => {\n    setExpenseForm(true);\n  };\n\n  const cancelExpenseHandler = () => {\n    setExpenseForm(false);\n  };\n\n  if (!expenseForm) {\n    return (\n      <form\n        action=\"\n    \"\n      >\n        <button type=\"button\" onClick={addExpenseHandler}>\n          Add Expense\n        </button>\n      </form>\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"\">Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"\">Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangedHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label htmlFor=\"\">Date</label>\n          <input\n            type=\"date\"\n            min=\"2021-01-01\"\n            max=\"2024-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__actions\">\n          <button type=\"button\" onClick={cancelExpenseHandler}>\n            Cancel\n          </button>\n          <button type=\"submit\">Add Expense</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React from 'react'\n\nimport ExpenseForm from './ExpenseForm'\nimport './NewExpense.css'\n\nconst NewExpense = (props) =>\n{\n    const saveExpenseDataHandler = (enteredExpenseData) =>\n    {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString()\n        }\n        props.onAddExpense(expenseData)\n    }\n    return (\n        <div className=\"new-expense\">\n            <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}/>\n        </div>\n    )\n}\n\n\nexport default NewExpense;","import React, {useState} from 'react'\nimport Expenses from './components/Expenses/Expenses'\nimport NewExpense from './components/NewExpense/NewExpense'\nimport './App.css';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App()\n{\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n  \n  const addExpenseHandler = expense =>\n  {\n    setExpenses((prevExpenses) =>\n    {\n      return [expense, ...prevExpenses]\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <NewExpense onAddExpense={addExpenseHandler}/>\n    <Expenses items={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}